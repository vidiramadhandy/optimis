name: Build and deploy Python app to Azure Web App - optipredict-flask

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read  # This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate  # Activating the virtual environment

      - name: Install dependencies
        run: |
          pip install --upgrade pip setuptools wheel  # Ensure latest versions of pip/setuptools
          pip install -r backend/python/requirements.txt  # Installing dependencies

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Zip artifact for deployment
        run: zip -r release.zip . -x "venv/*"  # Ensure folder structure is preserved, excluding venv

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      # Azure Login Step: Authenticating with Azure using Service Principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: List directory structure for debugging  # Check if python/requirements.txt is present
        run: ls -R backend/

      - name: Set up Python version for deployment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Create and activate virtual environment in deploy job
        run: |
          python -m venv venv
          source venv/bin/activate  # Activating the virtual environment in deploy

      - name: Install dependencies in deploy job
        run: |
          pip install --upgrade pip setuptools wheel  # Ensuring the latest versions
          cd backend  # Navigate to the backend folder
          pip install -r python/requirements.txt  # Install dependencies from the requirements.txt

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'optipredict-flask'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_28EFFD119F48478A8C50A5A43B968AFC }}
