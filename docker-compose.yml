version: '3.8'

services:
  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    restart: unless-stopped
    ports:
      - "0.0.0.0:3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://192.168.0.24:5000
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

  # Backend Express - menggunakan port 5000
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express-backend
    restart: unless-stopped
    ports:
      - "0.0.0.0:5000:5000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=optipredict_database
      - JWT_SECRET=optipredict_production_secret
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      python-ml:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Python ML Service - menggunakan port 5001
  python-ml:
    build:
      context: ./backend/python
      dockerfile: Dockerfile
    container_name: python-ml
    restart: unless-stopped
    ports:
      - "0.0.0.0:5001:5000"
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=optipredict_database
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s  # Lebih lama untuk model loading

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: optipredict_database
      MYSQL_ROOT_HOST: "%"
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--user=root"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
