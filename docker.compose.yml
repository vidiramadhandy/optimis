version: '3.8'

services:
  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost/api
    depends_on:
      - backend
    networks:
      - app-network

  # Backend Express
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=optipredict_database
      - JWT_SECRET=optipredict_secret_key_2025
    depends_on:
      - mysql
      - python-ml
    networks:
      - app-network

  # Python ML Service
  python-ml:
    build:
      context: ./backend/python
      dockerfile: Dockerfile
    container_name: python-ml
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=optipredict_database
    depends_on:
      - mysql
    networks:
      - app-network

  # MySQL Database dengan password kosong
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: optipredict_database
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
