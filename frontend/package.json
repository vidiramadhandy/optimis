version: '3.8'

services:
  nextjs-app:
    build: ./frontend
    container_name: nextjs-app
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - frontend-network
    depends_on:
      - express-api

  express-api:
    build: ./backend/express
    container_name: express-api
    restart: always
    ports:
      - "127.0.0.1:4000:4000"
    networks:
      - frontend-network
      - backend-network
    depends_on:
      - flask-ml
      - mysql-db

  flask-ml:
    build: ./backend/flask
    container_name: flask-ml
    restart: always
    ports:
      - "127.0.0.1:5000:5000"
    networks:
      - backend-network
    depends_on:
      - mysql-db

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: your_secure_password
      MYSQL_DATABASE: your_database
      MYSQL_USER: your_user
      MYSQL_PASSWORD: your_password
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - frontend-network
    depends_on:
      - nextjs-app

networks:
  frontend-network:
    driver: bridge
    internal: false
  backend-network:
    driver: bridge
    internal: true

volumes:
  mysql_data:
